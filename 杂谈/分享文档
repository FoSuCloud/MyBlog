## 新增页面流程
1. 新增路由：在YabRouter文件中的动态路由dynamicRoutes增加一条测试路由。
* 权限使用某一个权限就可以。（尝试过使用新增权限，在app/permission页面新增模块，但是freshProfile请求返回的权限列表没有改权限的！所以使用新增权限是没用的）
* 在RouterPathConstant中增加一条路由常量public  static readonly TEST = '/test'; 在YabRouter文件的测试,路由中的path使用该常量，表示url地址。
2. 新增文件：app/test/test.vue，该页面所在区域就是WrapperView中的wrapper-view-router-root下面的router-view所囊括的区域。
(YabRouter中的路由都是有一个children属性的，这是因为第一层的组件component是WrapperView，而第二层的组件才是指向侧边栏sidebar真实想要使用的模块，表示侧边栏的模块都是处于WrapperView中的)


## 登录流程
1. 项目启动，App.vue的created阶段就触发refreshProfile方法，触发initUser，获取cookie中的 YAB_AUTH_TOKEN字段，如果获取不到就表示还没有登录过，停留在本页面。（YAB_AUTH_TOKEN字段是后端返回的set-cookie中的字段，还有secure，所以要求协议是https协议，如果不是该协议则没办法保存该cookie到浏览器，导致后续校验获取不到该字段）
2. 权限校验
* 触发Actions文件的REQUEST_SERVER_USER_INFO方法，通过YAB.$API.api<>()发起一个请求获取后端返回的有效权限列表。（首页侧边栏显示多少内容也是根据这个权限列表）
3. 分支
* 在initUser方法的异步then中判断，如果已经有YAB_AUTH_TOKEN字段，那么路由被替换replace路由为RoutePathConstant.DATA_SOURCE数据源
* 如果诸多条件（如当前路由为/等）不成立，则不操作路由，停留在当前页面。
4. 如果停留在本页面
* 输入账号和密码，如果正确则触发请求authService/login，得到字段set-cookie: YAB_AUTH_TOKEN=ij30b011Q2We7Sxarl4zhbmpqO7P4bBto89_7OQQoNXiBvctbp-9fC7ID4c-lXD1eCw4tVynIcvHIjz0; Path=/; Secure; HttpOnly;
* 请求成功后this.$store.commit('SET_USER_TOKEN', token);然后把cookie设置到本地，但是保存的是'APP_AUTH_TOKEN',在何处把APP替换成YAB的？
* WebStorageTools.set(APP_AUTH_TOKEN, token, WebStorageTools.StorageType.LOCAL);APP_AUTH_TOKEN就是'APP_AUTH_TOKEN'；追踪到$WebStorageTools的set方法都找不到在哪里改变了。
5. 请求成功后增加路由到dataSource,进入首页。
