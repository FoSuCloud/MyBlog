worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main '[$time_local] [Status:$status]  [RealIP:$http_x_forwarded_for] [ForwardIP:$proxy_add_x_forwarded_for] [LocalIP:$remote_addr]'
                    '[$remote_user]  [$request] [RequestTime:$request_time] '
                    '[BodyBytes:$body_bytes_sent] [$http_referer] [$http_user_agent]';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    server_tokens off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    gzip on;
    gzip_min_length 1k; # 不压缩临界值，大于1K的才压缩，一般不用改
    gzip_buffers 4 16k; # buffer，就是，嗯，算了不解释了，不用改
    gzip_http_version 1.1; # 用了反向代理的话，末端通信是HTTP/1.0，有需求的应该也不用看我这科普文了；有这句的话注释了就行了，默认是HTTP/1.1
    gzip_comp_level 2; # 压缩级别，1-10，数字越大压缩的越好，时间也越长！
    # 进行压缩的文件类型，缺啥补啥就行了，JavaScript有两种写法，最好都写上吧，总有人抱怨js文件没有压缩，其实>多写一种格式就行了
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off; # 跟Squid等缓存服务有关，on的话会在Header里增加"Vary: Accept-Encoding"，我不需要这玩意，自己对照情况看着办吧
    gzip_disable "MSIE [1-6]\."; # IE6对Gzip不怎么友好，不给它Gzip了
    #client_max_body_size 20M;#防止oss上传小文件异常

    server {
        listen       443 ssl default_server;
        listen       [::]:443 ssl default_server;
        root         /var/lib/service;

        ssl on;
        ssl_certificate "/etc/ssl/certs/server.crt";
        ssl_certificate_key "/etc/ssl/certs/server.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES256-SHA:HIGH:!MEDIUM:!LOW:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4:@STRENGTH";

        #防XSS攻击
        add_header X-XSS-Protection "1; mode=block";

        #减少点击劫持
        add_header X-Frame-Options SAMEORIGIN;

        #Disable browser type guess
        add_header X-Content-Type-Options  nosniff;

        #打开HSTS 让浏览器强制使用HTTPS来请求网站资源，用以防止一些恶意行为
        add_header Strict-Transport-Security "max-age=31536000";  # #365天内使用HTTPS访问站
        # 防慢攻击
        client_body_timeout 5s;
        client_header_timeout 5s;

        #Nginx默认会用client_header_buffer_size这个buffer来读取header值，
        #如果header过大，它会使用large_client_header_buffers来读取。
        client_header_buffer_size  1k;

        #参数含义是申请4个8k的请求头缓冲区
        large_client_header_buffers  4  8k;

        #缓冲客户端请求的最大字节
        client_body_buffer_size  16K;

        #指定响应客户端的超时时间，这个超时仅限于两个阅读活动之间的时间，如果这个时间后客户端没有任何活动，Nginx将会关闭连接。
        send_timeout 10;

        #Hide X-Powered-By HTTP headers
        proxy_hide_header X-Powered-By;

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css|html)$ {
            if (-f $request_filename) {
                expires 1d;
                break;
            }
        }
    }
}

